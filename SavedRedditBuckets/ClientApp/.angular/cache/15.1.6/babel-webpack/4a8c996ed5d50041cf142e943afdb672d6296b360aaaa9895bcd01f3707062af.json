{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LoginService {\n  constructor() {\n    this.isOpen = false;\n    this.isOpen$ = this.isOpenSubject.asObservable();\n  }\n  openModal() {\n    this.isOpen = true;\n    // Add any logic here to control the opening of the modal\n  }\n\n  closeModal() {\n    this.isOpen = false;\n    // Add any logic here to control the closing of the modal\n  }\n}\n\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,YAAY;EAHzBC;IAIE,WAAM,GAAG,KAAK;IACd,YAAO,GAAwB,IAAI,CAACC,aAAa,CAACC,YAAY,EAAE;;EAGhEC,SAAS;IACP,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB;EACF;;EAEAC,UAAU;IACR,IAAI,CAACD,MAAM,GAAG,KAAK;IACnB;EACF;;;AAbWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAO,SAAZP,YAAY;EAAAQ,YAFX;AAAM","names":["LoginService","constructor","isOpenSubject","asObservable","openModal","isOpen","closeModal","factory","providedIn"],"sourceRoot":"","sources":["E:\\CodeProjects\\net\\SavedRedditBuckets\\SavedRedditBuckets\\ClientApp\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  isOpen = false;\r\n  isOpen$: Observable<boolean> = this.isOpenSubject.asObservable();\r\n\r\n\r\n  openModal() {\r\n    this.isOpen = true;\r\n    // Add any logic here to control the opening of the modal\r\n  }\r\n\r\n  closeModal() {\r\n    this.isOpen = false;\r\n    // Add any logic here to control the closing of the modal\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}